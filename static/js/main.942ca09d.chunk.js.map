{"version":3,"sources":["GalleryApp.module.css","ImageInfo.js","ImageList.js","GalleryApp.js","serviceWorker.js","index.js"],"names":["module","exports","ImageInfo","viewerImgLink","workName","description","this","thumbnailImgLink","generateTbImgLink","subEles","split","result","i","length","indexOf","require","Image1","Image2","Image3","Image4","Image5","Image6","Image7","imageList","GalleryApp","state","ImageList","viewerImgIndex","slideLeft","bind","slideRight","clickOnThumbnail","edge","step","setState","slide","event","target","id","Number","className","onClick","src","getViewerImgLink","galleryStyle","descriptionTitle","getWorkName","getDescription","class","rightSlideBar","map","image","index","selectedThumbnail","triangleDiv","getTbImgLink","key","alt","thumbnailImg","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.942ca09d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightSlideBar\":\"GalleryApp_rightSlideBar__cxT3g\",\"descriptionTitle\":\"GalleryApp_descriptionTitle__3WiWJ\",\"description\":\"GalleryApp_description__3EcW1\",\"selectedThumbnail\":\"GalleryApp_selectedThumbnail__2Tjk_\",\"thumbnailImg\":\"GalleryApp_thumbnailImg__63ZOU\",\"triangleDiv\":\"GalleryApp_triangleDiv__2HfrL\"};","'use strict';\n\nclass ImageInfo {\n    constructor(viewerImgLink, workName, description) {\n        this.viewerImgLink = viewerImgLink;\n        this.thumbnailImgLink = '';\n        this.workName = workName;\n        this.description = description;\n    }\n\n    getViewerImgLink() {\n        return this.viewerImgLink;\n    }\n\n    getTbImgLink() {\n        this.thumbnailImgLink = this.generateTbImgLink();\n        return this.thumbnailImgLink;\n    }\n\n    getWorkName() {\n        return this.workName;\n    }\n\n    getDescription() {\n        return this.description;\n    }\n\n    generateTbImgLink() {\n        let subEles = this.viewerImgLink.split('&');\n        let result = '';\n        for (let i = 0; i < subEles.length; i++) {\n            if (subEles[i].indexOf('h=') !== -1) {\n                subEles[i] = 'h=70';\n            } else if (subEles[i].indexOf('w=') !== -1) {\n                subEles[i] = 'w=70';\n            }\n            result += subEles[i] + '&';\n        }\n        return result;\n    }\n}\n\nmodule.exports = ImageInfo;\n","'use strict';\n\nconst ImageInfo = require('./ImageInfo');\n\nlet Image1 = new ImageInfo(\n    'https://images.unsplash.com/photo-1570199764549-6ca1f8f6289c?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=900&ixlib=rb-1.2.1&q=80&w=1600',\n    'Leaves waiting rain',\n    'Dark and hope.'\n)\nlet Image2 = new ImageInfo(\n    'https://images.unsplash.com/photo-1569704961413-e894453782cc?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=900&ixlib=rb-1.2.1&q=80&w=1600',\n    'Tulip',\n    'Amazing.'\n)\nlet Image3 = new ImageInfo(\n    'https://images.unsplash.com/photo-1571100107096-9211bedac4fa?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=900&ixlib=rb-1.2.1&q=80&w=1600',\n    'Snow Mountain',\n    'Cool.'\n)\nlet Image4 = new ImageInfo(\n    'https://images.unsplash.com/photo-1570354498334-9e43eaef1ff3?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=900&ixlib=rb-1.2.1&q=80&w=1600',\n    'Old fashioned car',\n    'Kind of fashion.'\n)\nlet Image5 = new ImageInfo(\n    'https://images.unsplash.com/photo-1570112658655-4e1086ddf899?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=900&ixlib=rb-1.2.1&q=80&w=1600',\n    'Valley in dream',\n    'Stars and river, relfecting in night.'\n)\nlet Image6 = new ImageInfo(\n    'https://images.unsplash.com/photo-1570722875687-4dea1b6d677d?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=900&ixlib=rb-1.2.1&q=80&w=1600',\n    'Cozy afternoon',\n    'Writing letters.'\n)\nlet Image7 = new ImageInfo(\n    'https://images.unsplash.com/photo-1571013219865-773fc0fd9b93?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=900&ixlib=rb-1.2.1&q=80&w=1600',\n    'Autumn',\n    'A romantic season'\n)\nlet Image8 = new ImageInfo(\n    'https://images.unsplash.com/photo-1569220785818-bb2bcac10b6d?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=900&ixlib=rb-1.2.1&q=80&w=1600',\n    'Cutting and decoration',\n    'Art of simple'\n)\n\nlet imageList = [Image1, Image2, Image3, Image4, Image5, Image6, Image7];\n\nexport default imageList;\n","import React from 'react';\n\nimport galleryStyle from './GalleryApp.module.css';\nimport ImageList from './ImageList';\n\nclass GalleryApp extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            imageList: ImageList,\n            viewerImgIndex: 0\n        };\n        this.slideLeft = this.slideLeft.bind(this);\n        this.slideRight = this.slideRight.bind(this);\n        this.clickOnThumbnail = this.clickOnThumbnail.bind(this);\n    }\n\n    slide(edge, step) {\n        if (this.state.viewerImgIndex === edge) {\n            this.setState({\n                imageList: this.state.imageList,\n                viewerImgIndex: this.state.imageList.length - 1 - edge\n            })\n        } else {\n            this.setState({\n                imageList: this.state.imageList,\n                viewerImgIndex: this.state.viewerImgIndex + step\n            })\n        }\n    }\n\n    slideLeft() {\n        this.slide(0, -1);\n    }\n\n    slideRight() {\n        this.slide(this.state.imageList.length - 1, 1);\n    }\n\n    clickOnThumbnail(event) {\n        if (event.target.id.indexOf('tbImg') === -1 || Number(event.target.id.split(' ')[1]) > this.state.imageList.length - 1) {return;}\n        this.setState({\n            imageList: this.state.imageList,\n            viewerImgIndex: Number(event.target.id.split(' ')[1])\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <div className=\"gallery-container\" id=\"gallery\">\n                    <div className=\"viewer-container\">\n                        <div className=\"slide-button-container\" onClick={this.slideLeft}>\n                            <img src=\"./arrow.svg\" />\n                        </div>\n                        <div className=\"viewer-image-container\">\n                            <img className=\"viewer-image\" src={this.state.imageList[this.state.viewerImgIndex].getViewerImgLink()} />\n                            <div className=\"description-container\">\n                                <h2 className={galleryStyle.descriptionTitle}>{this.state.imageList[this.state.viewerImgIndex].getWorkName()}</h2>\n                                <p className={galleryStyle.description}>{this.state.imageList[this.state.viewerImgIndex].getDescription()}</p>\n                            </div>\n                        </div>\n                        <div class=\"slide-button-container\" onClick={this.slideRight}>\n                            <img src='arrow.svg' className={galleryStyle.rightSlideBar}/>\n                        </div>\n                    </div>\n                    <div className=\"thumbnail-bar-container\" onClick={this.clickOnThumbnail}>\n                        {this.state.imageList.map((image, index) => \n                        <div className={index === this.state.viewerImgIndex ? galleryStyle.selectedThumbnail : ''}>\n                            {index === this.state.viewerImgIndex && <div className={galleryStyle.triangleDiv}/>}\n                            <div className=\"thumbnail-img-container\">\n                                <img src={image.getTbImgLink()} key={\"tbImg\" + index} id={\"tbImg \" + index} alt={image.getWorkName()}\n                                className={galleryStyle.thumbnailImg} />\n                            </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n}\n\nexport default GalleryApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GalleryApp from './GalleryApp';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<GalleryApp />, document.getElementById('gallery'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}